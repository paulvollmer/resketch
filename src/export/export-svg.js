#! /usr/bin/env node

/**
 * Usage
 *
 * node export-svg.js in.sketch out/dir
 */

const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');
const pkg = require('../../package.json')

const DEFAULT_OPTIONS = {
  app: '/Applications/Sketch Beta.app/Contents/Resources/sketchtool/bin/sketchtool'
}

function exportSketch(file, rootDir, cb, options = DEFAULT_OPTIONS) {
  // console.log(__dirname);
  const cmd = `"${options.app}" export artboards ${file}`
  // console.log(cmd);
  // console.log('////////////////');
  exec(cmd, (err, stdout, stderr) => {
    if (err) {
      console.log('ERROR', err);
      process.exit(1);
    }
    const files = parseStdout(stdout)
    // move file to target directory
    for (let i = 0; i < files.length; i++) {
      fs.renameSync(files[i], rootDir+'/'+files[i])
      console.log('renamed', files[i]);

      // create a functional img component
      const name = files[i].replace('.svg', '')
      let code = [
        `//`,
        `// generated by ${pkg.name} v${pkg.version}`,
        `//`,
        ``,
        `import React from 'react'`,
        `import artboard from './${files[i]}'`,
        ``,
        `const ${name} = () => (`,
        `  <img src={artboard} alt="logo"/>`,
        `)`,
        ``,
        `export default ${name}`,
        ``,
      ]
      // console.log(code.join('\n'));
      try {
        let out = path.join(rootDir, files[i])
        // console.log('out:', out);
        fs.writeFileSync(out.replace('.svg', '.js'), code.join('\n'))
      } catch (err) {
        console.log('ERROR', err);
      }
    }
    cb(files)
  });
}

function parseStdout(stdout) {
  const logSplits = stdout.split('\n')
  let files = []
  logSplits.forEach(logLine => {
    if (logLine !== '') {
      const filename = logLine.replace('Exported ', '')
      files.push(filename)
    }
  });
  // console.log('#', JSON.stringify(files));
  return files
}

exportSketch(process.argv[2], process.argv[3], (data) => {
  console.log('ready');
})
